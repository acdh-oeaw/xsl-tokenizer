<?xml version="1.0" encoding="UTF-8"?>
<grammar ns="" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes" xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">This grammar defines the structure of a Tokenization Profile Definition Document used by the xsl-tokenizer. For more information see http://github.com/acdh-oeaw/xsl-tokenizer.</documentation>
  
  
  
  <define name="profile.atts">
    <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">The class of attributes on the root element profile.</documentation>
    <attribute name="created">
      <data type="dateTime"/>
    </attribute>
    <attribute name="id">
      <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">The ID of this tokenization profile. This is used by the webapplication xtx (see https://github.com/acdh-oeaw/xtx).</documentation>
    </attribute>
    <attribute name="last-updated">
      <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">Timestamp of last profile update. This is used by the webapplication xtx (see https://github.com/acdh-oeaw/xtx).</documentation>
      <optional>
        <data type="dateTime"/>
      </optional>
    </attribute>
  </define>
  
  <define name="md.class">
    <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">The class of metadata elements</documentation>
      <element name="name">
        <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">The name of the Profile</documentation>
        <text/>
      </element>
      <element name="creator">
        <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">Name of the creator.</documentation>
        <text/>
      </element>
      <optional>
        <element name="contact">
          <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">Contact of the creator.</documentation>
          <text/>
        </element>
      </optional>
      <element name="description">
        <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">A description of the profile (purpose, scope, projects etc.)</documentation>
        <text/>
      </element>
  </define>
  
  <define name="params.class">
    <sch:pattern>
      <sch:rule context="param[@key = ('preserve-ws','debug','useLexicon')]">
        <sch:assert test="@value castable as xs:boolean">@value in param with @key <sch:value-of select="@key"/> must be castable to xs:boolean.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern>
      <sch:rule context="param[@key = 'useLexicon']">
        <sch:assert test="exists(../param[@key = 'lexicon'])">Parameter with key 'lexicon' must be defined if useLexicon is set to true. The parameter must contain one lexicon tokens per line.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern>
      <sch:rule context="param[@key = 'lexicon']">
        <sch:assert test="@xml:space">Missing attribute @xml:space</sch:assert>
      </sch:rule>
    </sch:pattern>
    <zeroOrMore>
        <element name="param">
          <attribute name="key">
            <choice>
              <value>ws-regex</value>
              <value>pc-regex</value>
              <value>preserve-ws</value>
              <value>debug</value>
              <value>useLexicon</value>
              <value>lexicon</value>
              <value>token-namespace</value>
            </choice>
          </attribute>
          <optional>
            <attribute name="value">
              <text/>
            </attribute>
          </optional>
          <optional>
            <attribute ns="http://www.w3.org/XML/1998/namespace" name="space">
                <value>preserve</value>
            </attribute>
          </optional>
          <optional>
            <text/>
          </optional>
        </element>
    </zeroOrMore>
  </define>
  
  <define name="anyXSLTelement">
    <element ns="http://www.w3.org/1999/XSL/Transform">
      <nsName ns="http://www.w3.org/1999/XSL/Transform"/>
      <mixed>
        <zeroOrMore>
          <attribute>
            <anyName/>
          </attribute>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="anyXSLTelement"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  
  <start>
    <element name="profile">
      <ref name="profile.atts"/>
      <element name="about">
        <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">Basic metadata about this Profile Definition Document.</documentation>
        <ref name="md.class"/>
      </element>
      <element name="parameters">
        <ref name="params.class"/>
      </element>
      <optional>
        <element name="postProcessing">
          <optional>
            <oneOrMore>
              <ref name="anyXSLTelement"/>
            </oneOrMore>
          </optional>
        </element>
      </optional>
      <zeroOrMore>
        <element name="namespace">
          <attribute name="prefix">
            <data type="NCName"/>
          </attribute>
          <data type="anyURI">
            <param name="pattern">.+</param>
          </data>
        </element>
      </zeroOrMore>
      
      <element name="copy">
        <ref name="borderDefElts.class"/>
      </element>
      <element name="ignore">
        <ref name="borderDefElts.class"/>
      </element>
      <element name="in-word-tags">
        <ref name="borderDefElts.class"/>
      </element>
      <element name="floating-blocks">
        <ref name="borderDefElts.class"/>
      </element>
      <element name="structure">
        <ref name="borderDefElts.class"/>
      </element>
      
      <optional>
        <element name="struct-attributes">
          <oneOrMore>
            <element name="struct-attribute">
              <attribute name="name">
                <data type="NCName"/>
              </attribute>
              <attribute name="on"/>
              <ref name="expression.class"/>
            </element>
          </oneOrMore>
        </element>
      </optional>
      
      <optional>
        <element name="doc-attributes">
          <oneOrMore>
            <element name="doc-attribute">
              <attribute name="name">
                <data type="NCName"/>
              </attribute>
              <ref name="expression.class"/>
            </element>
          </oneOrMore>
        </element>
      </optional>
    </element>
  </start>
  
  <define name="borderDefElts.class">
    <zeroOrMore>
      <ref name="expression.class"/>
    </zeroOrMore>
  </define>
  
  <define name="expression.class">
    <documentation xmlns="http://relaxng.org/ns/compatibility/annotations/1.0">Expression elements contain XPath expression to locate elements in the input document. We try to ensure (very simplistically) that a used namespace prefix is declared.</documentation>
    <sch:pattern>
      <sch:rule context="expression[matches(.,'^\w+:\w+')]">
        <sch:let name="prefix" value="substring-before(.,':')"/>
        <sch:assert test="$prefix = root()//namespace/@prefix">Missing namespace element for prefix <sch:value-of select="$prefix"/>.</sch:assert>
      </sch:rule>
    </sch:pattern>
      <element name="expression">
        <text/>
      </element>
  </define>
</grammar>
